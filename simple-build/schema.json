{
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail",
            "type": "array"
          }
        },
        "title": "HTTPValidationError",
        "type": "object"
      },
      "Input": {
        "properties": {
          "length_penalty": {
            "default": 1,
            "description": "A parameter that controls how long the outputs are. If < 1, the model will tend to generate shorter outputs, and > 1 will tend to generate longer outputs.",
            "maximum": 5,
            "minimum": 0,
            "title": "Length Penalty",
            "type": "number",
            "x-order": 8
          },
          "max_new_tokens": {
            "default": 128,
            "description": "Maximum number of tokens to generate. A word is generally 2-3 tokens",
            "minimum": 1,
            "title": "Max New Tokens",
            "type": "integer",
            "x-order": 2
          },
          "min_new_tokens": {
            "description": "Minimum number of tokens to generate. To disable, set to -1. A word is generally 2-3 tokens.",
            "minimum": -1,
            "title": "Min New Tokens",
            "type": "integer",
            "x-order": 3
          },
          "presence_penalty": {
            "default": 0,
            "description": "A parameter that penalizes repeated tokens regardless of the number of appearances. As the value increases, the model will be less likely to repeat tokens in the output.",
            "title": "Presence Penalty",
            "type": "number",
            "x-order": 9
          },
          "prompt": {
            "description": "Prompt to send to the model.",
            "title": "Prompt",
            "type": "string",
            "x-order": 0
          },
          "prompt_template": {
            "default": "{prompt}",
            "description": "Template for formatting the prompt. Can be an arbitrary string, but must contain the substring `{prompt}`.",
            "title": "Prompt Template",
            "type": "string",
            "x-order": 11
          },
          "seed": {
            "description": "Random seed. Leave blank to randomize the seed",
            "title": "Seed",
            "type": "integer",
            "x-order": 10
          },
          "stop_sequences": {
            "description": "A comma-separated list of sequences to stop generation at. For example, '<end>,<stop>' will stop generation at the first instance of 'end' or '<stop>'.",
            "title": "Stop Sequences",
            "type": "string",
            "x-order": 7
          },
          "system_prompt": {
            "default": "",
            "description": "System prompt to send to the model. This is prepended to the prompt and helps guide system behavior.",
            "title": "System Prompt",
            "type": "string",
            "x-order": 1
          },
          "temperature": {
            "default": 0.7,
            "description": "Adjusts randomness of outputs, greater than 1 is random and 0 is deterministic, 0.75 is a good starting value.",
            "maximum": 5,
            "minimum": 0,
            "title": "Temperature",
            "type": "number",
            "x-order": 4
          },
          "top_k": {
            "default": 0,
            "description": "When decoding text, samples from the top k most likely tokens; lower to ignore less likely tokens",
            "minimum": -1,
            "title": "Top K",
            "type": "integer",
            "x-order": 6
          },
          "top_p": {
            "default": 0.95,
            "description": "When decoding text, samples from the top p percentage of most likely tokens; lower to ignore less likely tokens",
            "maximum": 1,
            "minimum": 0,
            "title": "Top P",
            "type": "number",
            "x-order": 5
          }
        },
        "required": [
          "prompt"
        ],
        "title": "Input",
        "type": "object"
      },
      "Output": {
        "items": {
          "type": "string"
        },
        "title": "Output",
        "type": "array",
        "x-cog-array-display": "concatenate",
        "x-cog-array-type": "iterator"
      },
      "PredictionRequest": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "input": {
            "$ref": "#/components/schemas/Input"
          },
          "output_file_prefix": {
            "title": "Output File Prefix",
            "type": "string"
          },
          "webhook": {
            "format": "uri",
            "maxLength": 65536,
            "minLength": 1,
            "title": "Webhook",
            "type": "string"
          },
          "webhook_events_filter": {
            "default": [
              "start",
              "output",
              "logs",
              "completed"
            ],
            "items": {
              "$ref": "#/components/schemas/WebhookEvent"
            },
            "type": "array"
          }
        },
        "title": "PredictionRequest",
        "type": "object"
      },
      "PredictionResponse": {
        "properties": {
          "completed_at": {
            "format": "date-time",
            "title": "Completed At",
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "input": {
            "$ref": "#/components/schemas/Input"
          },
          "logs": {
            "default": "",
            "title": "Logs",
            "type": "string"
          },
          "metrics": {
            "title": "Metrics",
            "type": "object"
          },
          "output": {
            "$ref": "#/components/schemas/Output"
          },
          "started_at": {
            "format": "date-time",
            "title": "Started At",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "version": {
            "title": "Version",
            "type": "string"
          }
        },
        "title": "PredictionResponse",
        "type": "object"
      },
      "Status": {
        "description": "An enumeration.",
        "enum": [
          "starting",
          "processing",
          "succeeded",
          "canceled",
          "failed"
        ],
        "title": "Status",
        "type": "string"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location",
            "type": "array"
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError",
        "type": "object"
      },
      "WebhookEvent": {
        "description": "An enumeration.",
        "enum": [
          "start",
          "output",
          "logs",
          "completed"
        ],
        "title": "WebhookEvent",
        "type": "string"
      }
    }
  },
  "info": {
    "title": "Cog",
    "version": "0.1.0"
  },
  "openapi": "3.0.2",
  "paths": {
    "/": {
      "get": {
        "operationId": "root__get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Root  Get"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Root"
      }
    },
    "/health-check": {
      "get": {
        "operationId": "healthcheck_health_check_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Healthcheck Health Check Get"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Healthcheck"
      }
    },
    "/predictions": {
      "post": {
        "description": "Run a single prediction on the model",
        "operationId": "predict_predictions_post",
        "parameters": [
          {
            "in": "header",
            "name": "prefer",
            "required": false,
            "schema": {
              "title": "Prefer",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PredictionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredictionResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Predict"
      }
    },
    "/predictions/{prediction_id}": {
      "put": {
        "description": "Run a single prediction on the model (idempotent creation).",
        "operationId": "predict_idempotent_predictions__prediction_id__put",
        "parameters": [
          {
            "in": "path",
            "name": "prediction_id",
            "required": true,
            "schema": {
              "title": "Prediction ID",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "prefer",
            "required": false,
            "schema": {
              "title": "Prefer",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PredictionRequest"
                  }
                ],
                "title": "Prediction Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredictionResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Predict Idempotent"
      }
    },
    "/predictions/{prediction_id}/cancel": {
      "post": {
        "description": "Cancel a running prediction",
        "operationId": "cancel_predictions__prediction_id__cancel_post",
        "parameters": [
          {
            "in": "path",
            "name": "prediction_id",
            "required": true,
            "schema": {
              "title": "Prediction ID",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Cancel"
      }
    },
    "/shutdown": {
      "post": {
        "operationId": "start_shutdown_shutdown_post",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Start Shutdown Shutdown Post"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Start Shutdown"
      }
    }
  }
}